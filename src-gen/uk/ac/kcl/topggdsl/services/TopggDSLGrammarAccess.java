/*
 * generated by Xtext 2.38.0
 */
package uk.ac.kcl.topggdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TopggDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.topggdsl.TopggDSL.Model");
		private final Assignment cEntriesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEntriesEntryParserRuleCall_0 = (RuleCall)cEntriesAssignment.eContents().get(0);
		
		//Model:
		//    entries+=Entry*;
		@Override public ParserRule getRule() { return rule; }
		
		//entries+=Entry*
		public Assignment getEntriesAssignment() { return cEntriesAssignment; }
		
		//Entry
		public RuleCall getEntriesEntryParserRuleCall_0() { return cEntriesEntryParserRuleCall_0; }
	}
	public class EntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.topggdsl.TopggDSL.Entry");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBotParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReviewParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Entry:
		//    Bot | Review;
		@Override public ParserRule getRule() { return rule; }
		
		//Bot | Review
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Bot
		public RuleCall getBotParserRuleCall_0() { return cBotParserRuleCall_0; }
		
		//Review
		public RuleCall getReviewParserRuleCall_1() { return cReviewParserRuleCall_1; }
	}
	public class BotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.topggdsl.TopggDSL.Bot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cPrefixKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPrefixAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPrefixSTRINGTerminalRuleCall_3_0 = (RuleCall)cPrefixAssignment_3.eContents().get(0);
		private final Keyword cTagsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTagsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTagsSTRINGTerminalRuleCall_5_0 = (RuleCall)cTagsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTagsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTagsSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cTagsAssignment_6_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDescriptionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_8_0 = (RuleCall)cDescriptionAssignment_8.eContents().get(0);
		
		//Bot:
		//    'name' name=STRING
		//    'prefix' prefix=STRING
		//    'tags' tags+=STRING (',' tags+=STRING)*
		//    'description' description=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'name' name=STRING
		//'prefix' prefix=STRING
		//'tags' tags+=STRING (',' tags+=STRING)*
		//'description' description=STRING
		public Group getGroup() { return cGroup; }
		
		//'name'
		public Keyword getNameKeyword_0() { return cNameKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'prefix'
		public Keyword getPrefixKeyword_2() { return cPrefixKeyword_2; }
		
		//prefix=STRING
		public Assignment getPrefixAssignment_3() { return cPrefixAssignment_3; }
		
		//STRING
		public RuleCall getPrefixSTRINGTerminalRuleCall_3_0() { return cPrefixSTRINGTerminalRuleCall_3_0; }
		
		//'tags'
		public Keyword getTagsKeyword_4() { return cTagsKeyword_4; }
		
		//tags+=STRING
		public Assignment getTagsAssignment_5() { return cTagsAssignment_5; }
		
		//STRING
		public RuleCall getTagsSTRINGTerminalRuleCall_5_0() { return cTagsSTRINGTerminalRuleCall_5_0; }
		
		//(',' tags+=STRING)*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//tags+=STRING
		public Assignment getTagsAssignment_6_1() { return cTagsAssignment_6_1; }
		
		//STRING
		public RuleCall getTagsSTRINGTerminalRuleCall_6_1_0() { return cTagsSTRINGTerminalRuleCall_6_1_0; }
		
		//'description'
		public Keyword getDescriptionKeyword_7() { return cDescriptionKeyword_7; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_8() { return cDescriptionAssignment_8; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_8_0() { return cDescriptionSTRINGTerminalRuleCall_8_0; }
	}
	public class ReviewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.topggdsl.TopggDSL.Review");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReviewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdSTRINGTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cRefersToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBotRefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cBotRefBotCrossReference_3_0 = (CrossReference)cBotRefAssignment_3.eContents().get(0);
		private final RuleCall cBotRefBotIDTerminalRuleCall_3_0_1 = (RuleCall)cBotRefBotCrossReference_3_0.eContents().get(1);
		private final Keyword cStatusKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cStatusAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cStatusStatusEnumRuleCall_5_0 = (RuleCall)cStatusAssignment_5.eContents().get(0);
		private final Keyword cReasonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cReasonAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cReasonSTRINGTerminalRuleCall_7_0 = (RuleCall)cReasonAssignment_7.eContents().get(0);
		private final Keyword cReviewerKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cReviewerAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cReviewerSTRINGTerminalRuleCall_9_0 = (RuleCall)cReviewerAssignment_9.eContents().get(0);
		
		//Review:
		//    'review' id=STRING
		//    'refersTo' botRef=[Bot]
		//    'status' status=Status
		//    'reason' reason=STRING
		//    'reviewer' reviewer=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'review' id=STRING
		//'refersTo' botRef=[Bot]
		//'status' status=Status
		//'reason' reason=STRING
		//'reviewer' reviewer=STRING
		public Group getGroup() { return cGroup; }
		
		//'review'
		public Keyword getReviewKeyword_0() { return cReviewKeyword_0; }
		
		//id=STRING
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//STRING
		public RuleCall getIdSTRINGTerminalRuleCall_1_0() { return cIdSTRINGTerminalRuleCall_1_0; }
		
		//'refersTo'
		public Keyword getRefersToKeyword_2() { return cRefersToKeyword_2; }
		
		//botRef=[Bot]
		public Assignment getBotRefAssignment_3() { return cBotRefAssignment_3; }
		
		//[Bot]
		public CrossReference getBotRefBotCrossReference_3_0() { return cBotRefBotCrossReference_3_0; }
		
		//ID
		public RuleCall getBotRefBotIDTerminalRuleCall_3_0_1() { return cBotRefBotIDTerminalRuleCall_3_0_1; }
		
		//'status'
		public Keyword getStatusKeyword_4() { return cStatusKeyword_4; }
		
		//status=Status
		public Assignment getStatusAssignment_5() { return cStatusAssignment_5; }
		
		//Status
		public RuleCall getStatusStatusEnumRuleCall_5_0() { return cStatusStatusEnumRuleCall_5_0; }
		
		//'reason'
		public Keyword getReasonKeyword_6() { return cReasonKeyword_6; }
		
		//reason=STRING
		public Assignment getReasonAssignment_7() { return cReasonAssignment_7; }
		
		//STRING
		public RuleCall getReasonSTRINGTerminalRuleCall_7_0() { return cReasonSTRINGTerminalRuleCall_7_0; }
		
		//'reviewer'
		public Keyword getReviewerKeyword_8() { return cReviewerKeyword_8; }
		
		//reviewer=STRING
		public Assignment getReviewerAssignment_9() { return cReviewerAssignment_9; }
		
		//STRING
		public RuleCall getReviewerSTRINGTerminalRuleCall_9_0() { return cReviewerSTRINGTerminalRuleCall_9_0; }
	}
	
	public class StatusElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.topggdsl.TopggDSL.Status");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cApprovedEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cApprovedApprovedKeyword_0_0 = (Keyword)cApprovedEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDeclinedEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDeclinedDeclinedKeyword_1_0 = (Keyword)cDeclinedEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cReviewEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cReviewReviewKeyword_2_0 = (Keyword)cReviewEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Status:
		//    approved | declined | review;
		public EnumRule getRule() { return rule; }
		
		//approved | declined | review
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//approved
		public EnumLiteralDeclaration getApprovedEnumLiteralDeclaration_0() { return cApprovedEnumLiteralDeclaration_0; }
		
		public Keyword getApprovedApprovedKeyword_0_0() { return cApprovedApprovedKeyword_0_0; }
		
		//declined
		public EnumLiteralDeclaration getDeclinedEnumLiteralDeclaration_1() { return cDeclinedEnumLiteralDeclaration_1; }
		
		public Keyword getDeclinedDeclinedKeyword_1_0() { return cDeclinedDeclinedKeyword_1_0; }
		
		//review
		public EnumLiteralDeclaration getReviewEnumLiteralDeclaration_2() { return cReviewEnumLiteralDeclaration_2; }
		
		public Keyword getReviewReviewKeyword_2_0() { return cReviewReviewKeyword_2_0; }
	}
	
	private final ModelElements pModel;
	private final EntryElements pEntry;
	private final BotElements pBot;
	private final ReviewElements pReview;
	private final StatusElements eStatus;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TopggDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pEntry = new EntryElements();
		this.pBot = new BotElements();
		this.pReview = new ReviewElements();
		this.eStatus = new StatusElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("uk.ac.kcl.topggdsl.TopggDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    entries+=Entry*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Entry:
	//    Bot | Review;
	public EntryElements getEntryAccess() {
		return pEntry;
	}
	
	public ParserRule getEntryRule() {
		return getEntryAccess().getRule();
	}
	
	//Bot:
	//    'name' name=STRING
	//    'prefix' prefix=STRING
	//    'tags' tags+=STRING (',' tags+=STRING)*
	//    'description' description=STRING;
	public BotElements getBotAccess() {
		return pBot;
	}
	
	public ParserRule getBotRule() {
		return getBotAccess().getRule();
	}
	
	//Review:
	//    'review' id=STRING
	//    'refersTo' botRef=[Bot]
	//    'status' status=Status
	//    'reason' reason=STRING
	//    'reviewer' reviewer=STRING;
	public ReviewElements getReviewAccess() {
		return pReview;
	}
	
	public ParserRule getReviewRule() {
		return getReviewAccess().getRule();
	}
	
	//enum Status:
	//    approved | declined | review;
	public StatusElements getStatusAccess() {
		return eStatus;
	}
	
	public EnumRule getStatusRule() {
		return getStatusAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
